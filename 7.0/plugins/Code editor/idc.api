idc.AddSeg(startea, endea, base, use32, align, comb)
idc.AutoMark(ea,qtype)
idc.EVAL_FAILURE(code)
idc.GetCommentEx(ea, repeatable)
idc.GetDisasm(ea)
idc.GetDouble(ea)
idc.GetFloat(ea)
idc.GetLocalType(ordinal, flags)
idc.LoadFile(filepath, pos, ea, size)
idc.MakeVar(ea)
idc.SaveFile(filepath, pos, ea, size)
idc.SetPrcsr(processor)
idc.SetType(ea, newtype)
idc.SizeOf(typestr)
idc.add_auto_stkpnt(func_ea, ea, delta)
idc.add_bpt(ea, size=0, bpttype=BPT_DEFAULT)
idc.add_cref(From, To, flowtype)
idc.add_default_til(name)
idc.add_dref(From, To, drefType)
idc.add_entry(ordinal, ea, name, makecode)
idc.add_enum(idx, name, flag)
idc.add_enum_member(enum_id, name, value, bmask)
idc.add_func(start, end = ida_idaapi.BADADDR)
idc.add_hidden_range(start, end, description, header, footer, color)
idc.add_idc_hotkey(hotkey, idcfunc)
idc.add_segm_ex(startea, endea, base, use32, align, comb, flags)
idc.add_sourcefile(ea1, ea2, filename)
idc.add_struc(index, name, is_union)
idc.add_struc_member(sid, name, offset, flag, typeid, nbytes, target=-1, tdelta=0, reftype=REF_OFF32)
idc.add_user_stkpnt(ea, delta)
idc.append_func_tail(funcea, ea1, ea2)
idc.apply_type(ea, py_type, flags = TINFO_DEFINITE)
idc.ask_seg(defval, prompt)
idc.ask_yn(defval, prompt)
idc.atoa(ea)
idc.atol(s)
idc.attach_process(pid, event_id)
idc.auto_mark_range(start, end, queuetype)
idc.auto_unmark(start, end, queuetype)
idc.auto_wait()
idc.batch(batch)
idc.byte_value(F)
idc.calc_gtn_flags(fromaddr, ea)
idc.call_system(command)
idc.can_exc_continue()
idc.check_bpt(ea)
idc.choose_func(title)
idc.clear_trace(filename)
idc.create_align(ea, count, align)
idc.create_array(name)
idc.create_byte(ea)
idc.create_custom_data(ea, size, dtid, fid)
idc.create_data(ea, flags, size, tid)
idc.create_double(ea)
idc.create_dword(ea)
idc.create_float(ea)
idc.create_insn(ea)
idc.create_oword(ea)
idc.create_pack_real(ea)
idc.create_qword(ea)
idc.create_strlit(ea, endea)
idc.create_struct(ea, size, strname)
idc.create_tbyte(ea)
idc.create_word(ea)
idc.create_yword(ea)
idc.define_exception(code, name, desc, flags)
idc.define_local_var(start, end, location, name)
idc.del_array_element(tag, array_id, idx)
idc.del_bpt(ea)
idc.del_cref(From, To, undef)
idc.del_dref(From, To)
idc.del_enum(enum_id)
idc.del_enum_member(enum_id, value, serial, bmask)
idc.del_extra_cmt(ea, n)
idc.del_fixup(ea)
idc.del_func(ea)
idc.del_hash_string(hash_id, key)
idc.del_hidden_range(ea)
idc.del_idc_hotkey(hotkey)
idc.del_items(ea, flags=0, size=1)
idc.del_segm(ea, flags)
idc.del_selector(sel)
idc.del_source_linnum(ea)
idc.del_sourcefile(ea)
idc.del_stkpnt(func_ea, ea)
idc.del_struc(sid)
idc.del_struc_member(sid, member_offset)
idc.delete_all_segments()
idc.delete_array(array_id)
idc.demangle_name(name, disable_mask)
idc.detach_process()
idc.diff_trace_file(filename)
idc.enable_bpt(ea, enable)
idc.enable_tracing(trace_level, enable)
idc.error(format)
idc.eval_idc(expr)
idc.exit_process()
idc.expand_struc(sid, offset, delta, recalc)
idc.fclose(handle)
idc.fgetc(handle)
idc.filelength(handle)
idc.find_binary(ea, flag, searchstr, radix=16)
idc.find_code(ea, flag)
idc.find_data(ea, flag)
idc.find_defined(ea, flag)
idc.find_func_end(ea)
idc.find_imm(ea, flag, value)
idc.find_selector(val)
idc.find_suspop(ea, flag)
idc.find_text(ea, flag, y, x, searchstr)
idc.find_unknown(ea, flag)
idc.first_func_chunk(funcea)
idc.fopen(f, mode)
idc.force_bl_call(ea)
idc.force_bl_jump(ea)
idc.form(format, *args)
idc.fprintf(handle, format, *args)
idc.fputc(byte, handle)
idc.fseek(handle, offset, origin)
idc.ftell(handle)
idc.func_contains(func_ea, ea)
idc.gen_file(filetype, path, ea1, ea2, flags)
idc.gen_flow_graph(outfile, title, ea1, ea2, flags)
idc.gen_simple_call_chart(outfile, title, flags)
idc.generate_disasm_line(ea, flags)
idc.get_array_element(tag, array_id, idx)
idc.get_array_id(name)
idc.get_bmask_cmt(enum_id, bmask, repeatable)
idc.get_bmask_name(enum_id, bmask)
idc.get_bookmark(slot)
idc.get_bookmark_desc(slot)
idc.get_bpt_attr(ea, bptattr)
idc.get_bpt_ea(n)
idc.get_bpt_qty()
idc.get_bpt_tev_ea(tev)
idc.get_bytes(ea, size, use_dbg = False)
idc.get_call_tev_callee(tev)
idc.get_cmt(ea, repeatable)
idc.get_color(ea, what)
idc.get_curline()
idc.get_current_thread()
idc.get_db_byte(ea)
idc.get_debugger_event_cond()
idc.get_entry(ordinal)
idc.get_entry_name(ordinal)
idc.get_entry_ordinal(index)
idc.get_entry_qty()
idc.get_enum(name)
idc.get_enum_cmt(enum_id, repeatable)
idc.get_enum_flag(enum_id)
idc.get_enum_idx(enum_id)
idc.get_enum_member(enum_id, value, serial, bmask)
idc.get_enum_member_bmask(const_id)
idc.get_enum_member_by_name(name)
idc.get_enum_member_cmt(const_id, repeatable)
idc.get_enum_member_enum(const_id)
idc.get_enum_member_name(const_id)
idc.get_enum_member_value(const_id)
idc.get_enum_name(enum_id)
idc.get_enum_qty()
idc.get_enum_size(enum_id)
idc.get_enum_width(enum_id)
idc.get_event_bpt_hea()
idc.get_event_ea()
idc.get_event_exc_code()
idc.get_event_exc_ea()
idc.get_event_exc_info()
idc.get_event_exit_code()
idc.get_event_id()
idc.get_event_info()
idc.get_event_module_base()
idc.get_event_module_name()
idc.get_event_module_size()
idc.get_event_pid()
idc.get_event_tid()
idc.get_extra_cmt(ea, n)
idc.get_fchunk_attr(ea, attr)
idc.get_fchunk_referer(ea, idx)
idc.get_first_bmask(enum_id)
idc.get_first_cref_from(From)
idc.get_first_cref_to(To)
idc.get_first_dref_from(From)
idc.get_first_dref_to(To)
idc.get_first_enum_member(enum_id, bmask)
idc.get_first_fcref_from(From)
idc.get_first_fcref_to(To)
idc.get_first_hash_key(hash_id)
idc.get_first_index(tag, array_id)
idc.get_first_member(sid)
idc.get_first_module()
idc.get_first_seg()
idc.get_first_struc_idx()
idc.get_fixup_target_dis(ea)
idc.get_fixup_target_flags(ea)
idc.get_fixup_target_off(ea)
idc.get_fixup_target_sel(ea)
idc.get_fixup_target_type(ea)
idc.get_forced_operand(ea, n)
idc.get_frame_args_size(ea)
idc.get_frame_id(ea)
idc.get_frame_lvar_size(ea)
idc.get_frame_regs_size(ea)
idc.get_frame_size(ea)
idc.get_full_flags(ea)
idc.get_func_attr(ea, attr)
idc.get_func_cmt(ea, repeatable)
idc.get_func_flags(ea)
idc.get_func_name(ea)
idc.get_func_off_str(ea)
idc.get_hash_long(hash_id, key)
idc.get_hash_string(hash_id, key)
idc.get_idb_path()
idc.get_inf_attr(offset)
idc.get_input_file_path()
idc.get_item_end(ea)
idc.get_item_head(ea)
idc.get_item_size(ea)
idc.get_last_bmask(enum_id)
idc.get_last_enum_member(enum_id, bmask)
idc.get_last_hash_key(hash_id)
idc.get_last_index(tag, array_id)
idc.get_last_member(sid)
idc.get_last_struc_idx()
idc.get_local_tinfo(ordinal)
idc.get_manual_insn(ea)
idc.get_member_cmt(sid, member_offset, repeatable)
idc.get_member_flag(sid, member_offset)
idc.get_member_id(sid, member_offset)
idc.get_member_name(sid, member_offset)
idc.get_member_offset(sid, member_name)
idc.get_member_qty(sid)
idc.get_member_size(sid, member_offset)
idc.get_member_strid(sid, member_offset)
idc.get_min_spd_ea(func_ea)
idc.get_module_name(base)
idc.get_module_size(base)
idc.get_name(ea, gtn_flags=0)
idc.get_name_ea(fromaddr, name)
idc.get_name_ea_simple(name)
idc.get_next_bmask(enum_id, value)
idc.get_next_cref_from(From, current)
idc.get_next_cref_to(To, current)
idc.get_next_dref_from(From, current)
idc.get_next_dref_to(To, current)
idc.get_next_enum_member(enum_id, value, bmask)
idc.get_next_fchunk(ea)
idc.get_next_fcref_from(From, current)
idc.get_next_fcref_to(To, current)
idc.get_next_fixup_ea(ea)
idc.get_next_func(ea)
idc.get_next_hash_key(hash_id, key)
idc.get_next_index(tag, array_id, idx)
idc.get_next_module(base)
idc.get_next_offset(sid, offset)
idc.get_next_seg(ea)
idc.get_next_struc_idx(index)
idc.get_numbered_type_name(ordinal)
idc.get_operand_type(ea, n)
idc.get_operand_value(ea, n)
idc.get_ordinal_qty()
idc.get_original_byte(ea)
idc.get_prev_bmask(enum_id, value)
idc.get_prev_enum_member(enum_id, value, bmask)
idc.get_prev_fchunk(ea)
idc.get_prev_fixup_ea(ea)
idc.get_prev_func(ea)
idc.get_prev_hash_key(hash_id, key)
idc.get_prev_index(tag, array_id, idx)
idc.get_prev_offset(sid, offset)
idc.get_prev_struc_idx(index)
idc.get_process_state()
idc.get_processes()
idc.get_qword(ea)
idc.get_reg_value(name)
idc.get_ret_tev_return(tev)
idc.get_root_filename()
idc.get_screen_ea()
idc.get_segm_attr(segea, attr)
idc.get_segm_by_sel(base)
idc.get_segm_end(ea)
idc.get_segm_name(ea)
idc.get_segm_start(ea)
idc.get_source_linnum(ea)
idc.get_sourcefile(ea)
idc.get_sp_delta(ea)
idc.get_spd(ea)
idc.get_sreg(ea, reg)
idc.get_step_trace_options()
idc.get_str_type(ea)
idc.get_strlit_contents(ea, length = -1, strtype = STRTYPE_C)
idc.get_struc_by_idx(index)
idc.get_struc_cmt(sid, repeatable)
idc.get_struc_id(name)
idc.get_struc_idx(sid)
idc.get_struc_name(sid)
idc.get_struc_qty()
idc.get_struc_size(sid)
idc.get_tev_ea(tev)
idc.get_tev_mem(tev, idx)
idc.get_tev_mem_ea(tev, idx)
idc.get_tev_mem_qty(tev)
idc.get_tev_qty()
idc.get_tev_reg(tev, reg)
idc.get_tev_tid(tev)
idc.get_tev_type(tev)
idc.get_thread_qty()
idc.get_tinfo(ea)
idc.get_trace_file_desc(filename)
idc.get_type(ea)
idc.get_wide_byte(ea)
idc.get_wide_dword(ea)
idc.get_wide_word(ea)
idc.get_xref_type()
idc.getn_enum(idx)
idc.getn_thread(idx)
idc.guess_type(ea)
idc.hasName(F)
idc.hasUserName(F)
idc.has_value(F)
idc.here()
idc.idadir()
idc.import_type(idx, type_name)
idc.isBin0(F)
idc.isBin1(F)
idc.isDec0(F)
idc.isDec1(F)
idc.isExtra(F)
idc.isHex0(F)
idc.isHex1(F)
idc.isOct0(F)
idc.isOct1(F)
idc.isRef(F)
idc.is_align(F)
idc.is_bf(enum_id)
idc.is_byte(F)
idc.is_char0(F)
idc.is_char1(F)
idc.is_code(F)
idc.is_data(F)
idc.is_defarg0(F)
idc.is_defarg1(F)
idc.is_double(F)
idc.is_dword(F)
idc.is_enum0(F)
idc.is_enum1(F)
idc.is_event_handled()
idc.is_float(F)
idc.is_flow(F)
idc.is_head(F)
idc.is_loaded(ea)
idc.is_manual0(F)
idc.is_manual1(F)
idc.is_mapped(ea)
idc.is_off0(F)
idc.is_off1(F)
idc.is_oword(F)
idc.is_pack_real(F)
idc.is_qword(F)
idc.is_seg0(F)
idc.is_seg1(F)
idc.is_stkvar0(F)
idc.is_stkvar1(F)
idc.is_strlit(F)
idc.is_stroff0(F)
idc.is_stroff1(F)
idc.is_struct(F)
idc.is_tail(F)
idc.is_tbyte(F)
idc.is_union(sid)
idc.is_unknown(F)
idc.is_valid_trace_file(filename)
idc.is_word(F)
idc.jumpto(ea)
idc.load_and_run_plugin(name, arg)
idc.load_debugger(dbgname, use_remote)
idc.load_trace_file(filename)
idc.loadfile(filepath, pos, ea, size)
idc.ltoa(n, radix)
idc.make_array(ea, nitems)
idc.move_segm(ea, to, flags)
idc.msg(message)
idc.next_addr(ea)
idc.next_func_chunk(funcea, tailea)
idc.next_head(ea, maxea=BADADDR)
idc.next_not_tail(ea)
idc.op_bin(ea, n)
idc.op_chr(ea, n)
idc.op_dec(ea, n)
idc.op_enum(ea, n, enumid, serial)
idc.op_flt(ea, n)
idc.op_hex(ea, n)
idc.op_man(ea, n, opstr)
idc.op_num(ea, n)
idc.op_oct(ea, n)
idc.op_offset(ea, n, reftype, target, base, tdelta)
idc.op_offset_high16(ea, n, target)
idc.op_plain_offset(ea, n, base)
idc.op_seg(ea, n)
idc.op_stkvar(ea, n)
idc.op_stroff(ea, n, strid, delta)
idc.parse_decl(inputtype, flags)
idc.parse_decls(inputtype, flags = 0)
idc.patch_byte(ea, value)
idc.patch_dbg_byte(ea,value)
idc.patch_dword(ea, value)
idc.patch_qword(ea, value)
idc.patch_word(ea, value)
idc.plan_and_wait(sEA, eEA, final_pass=True)
idc.plan_to_apply_idasgn(name)
idc.prev_addr(ea)
idc.prev_head(ea, minea=0)
idc.prev_not_tail(ea)
idc.print_decls(ordinals, flags)
idc.print_insn_mnem(ea)
idc.print_operand(ea, n)
idc.process_config_line(directive)
idc.process_ui_action(name, flags=0)
idc.put_bookmark(ea, lnnum, x, y, slot, comment)
idc.qexit(code)
idc.qsleep(milliseconds)
idc.read_dbg_byte(ea)
idc.read_dbg_dword(ea)
idc.read_dbg_memory(ea, size)
idc.read_dbg_qword(ea)
idc.read_dbg_word(ea)
idc.read_selection_end()
idc.read_selection_start()
idc.readlong(handle, mostfirst)
idc.readshort(handle, mostfirst)
idc.readstr(handle)
idc.rebase_program(delta, flags)
idc.recalc_spd(cur_ea)
idc.refresh_debugger_memory()
idc.refresh_idaview_anyway()
idc.refresh_lists()
idc.remove_fchunk(funcea, tailea)
idc.rename_array(array_id, newname)
idc.rename_entry(ordinal, name)
idc.resume_process()
idc.resume_thread(tid)
idc.retrieve_input_file_md5()
idc.rotate_byte(x, count)
idc.rotate_dword(x, count)
idc.rotate_left(value, count, nbits, offset)
idc.rotate_word(x, count)
idc.run_to(ea)
idc.save_database(idbname, flags=0)
idc.save_trace_file(filename, description)
idc.savefile(filepath, pos, ea, size)
idc.sel2para(sel)
idc.select_thread(tid)
idc.selector_by_name(segname)
idc.send_dbg_command(cmd)
idc.set_array_long(array_id, idx, value)
idc.set_array_params(ea, flags, litems, align)
idc.set_array_string(array_id, idx, value)
idc.set_bmask_cmt(enum_id, bmask, cmt, repeatable)
idc.set_bmask_name(enum_id, bmask, name)
idc.set_bpt_attr(address, bptattr, value)
idc.set_bpt_cond(ea, cnd, is_lowcnd=0)
idc.set_cmt(ea, comment, rptble)
idc.set_color(ea, what, color)
idc.set_debugger_event_cond(cond)
idc.set_debugger_options(opt)
idc.set_default_sreg_value(ea, reg, value)
idc.set_enum_bf(enum_id, flag)
idc.set_enum_cmt(enum_id, cmt, repeatable)
idc.set_enum_flag(enum_id, flag)
idc.set_enum_idx(enum_id, idx)
idc.set_enum_member_cmt(const_id, cmt, repeatable)
idc.set_enum_member_name(const_id, name)
idc.set_enum_name(enum_id, name)
idc.set_enum_width(enum_id, width)
idc.set_fchunk_attr(ea, attr, value)
idc.set_fixup(ea, fixuptype, fixupflags, targetsel, targetoff, displ)
idc.set_flag(off, bit, value)
idc.set_frame_size(ea, lvsize, frregs, argsize)
idc.set_func_attr(ea, attr, value)
idc.set_func_cmt(ea, cmt, repeatable)
idc.set_func_end(ea, end)
idc.set_func_flags(ea, flags)
idc.set_hash_long(hash_id, key, value)
idc.set_hash_string(hash_id, key, value)
idc.set_ida_state(status)
idc.set_inf_attr(offset, value)
idc.set_local_type(ordinal, input, flags)
idc.set_manual_insn(ea, insn)
idc.set_member_cmt(sid, member_offset, comment, repeatable)
idc.set_member_name(sid, member_offset, name)
idc.set_member_type(sid, member_offset, flag, typeid, nitems, target=-1, tdelta=0, reftype=REF_OFF32)
idc.set_name(ea, name, flags=ida_name.SN_CHECK)
idc.set_processor_type(processor, level)
idc.set_reg_value(value, name)
idc.set_remote_debugger(hostname, password, portnum)
idc.set_root_filename(path)
idc.set_segm_addressing(ea, bitness)
idc.set_segm_alignment(ea, alignment)
idc.set_segm_attr(segea, attr, value)
idc.set_segm_class(ea, segclass)
idc.set_segm_combination(segea, comb)
idc.set_segm_name(ea, name)
idc.set_segm_type(segea, segtype)
idc.set_segment_bounds(ea, startea, endea, flags)
idc.set_selector(sel, value)
idc.set_source_linnum(ea, lnnum)
idc.set_step_trace_options(options)
idc.set_storage_type(start_ea, end_ea, stt)
idc.set_struc_cmt(sid, comment, repeatable)
idc.set_struc_idx(sid, index)
idc.set_struc_name(sid, name)
idc.set_tail_owner(tailea, funcea)
idc.set_target_assembler(asmidx)
idc.set_trace_file_desc(filename, description)
idc.split_sreg_range(ea, reg, value, tag=SR_user)
idc.start_process(path, args, sdir)
idc.step_into()
idc.step_over()
idc.step_until_ret()
idc.strlen(s)
idc.strstr(s1, s2)
idc.substr(s, x1, x2)
idc.suspend_process()
idc.suspend_thread(tid)
idc.take_memory_snapshot(only_loader_segs)
idc.to_ea(seg, off)
idc.toggle_bnot(ea, n)
idc.toggle_sign(ea, n)
idc.update_extra_cmt(ea, n, line)
idc.update_hidden_range(ea, visible)
idc.validate_idb_names()
idc.value_is_float(var)
idc.value_is_func(var)
idc.value_is_int64(var)
idc.value_is_long(var)
idc.value_is_pvoid(var)
idc.value_is_string(var)
idc.wait_for_next_event(wfne, timeout)
idc.warning(message)
idc.write_dbg_memory(ea, data)
idc.writelong(handle, dword, mostfirst)
idc.writeshort(handle, word, mostfirst)
idc.writestr(handle, s)
idc.xtol(s)
